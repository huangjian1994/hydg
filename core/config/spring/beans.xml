<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
	
	<context:annotation-config />
	
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<context:component-scan base-package="com.htcf">
		<context:include-filter type="regex" expression=".service.*" />
		<context:include-filter type="regex" expression=".action.*" />
		<context:include-filter type="regex" expression=".dao.*" />
		<context:include-filter type="regex" expression=".entity.*" />
	</context:component-scan>

 	<!--<context:property-placeholder location="classpath:jdbc.properties"/>-->

  
	  <bean id="propertyConfig" class="com.htcf.action.PropertyPlaceholderConfigurerExt">
                <property name="locations">
                        <list>
                                <value>classpath:jdbc.properties</value>
                        </list>
                </property>
              
        </bean>
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${driverClassName}"></property>
		<property name="url" value="${url}"></property>
	 
		<property name="username" value="${username}"></property>
		<property name="password" value="${password}"></property>

	</bean>   
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.htcf.entity" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<!--<prop key="hibernate.hbm2ddl.auto">update</prop>-->
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.HashtableCacheProvider</prop>
			</props>
		</property>

	</bean>
	
	<!--
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="database" value="ORACLE" />
				<property name="showSql" value="true" />
				<property name="generateDdl" value="true" />
			</bean>
		</property>
	</bean>
	-->
	
	
	<!--
	<bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	-->
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory"/>
		</property>
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="txServiceOperation" expression="execution(* com.htcf.service.impl.*.*(..))" />
		<aop:advisor pointcut-ref="txServiceOperation" advice-ref="txAdvice" />
	</aop:config>

	<!-- 定时 -->
	<bean id="sbdcptAct" class="com.htcf.action.SbdcptAction" />
	<bean id="messagePushAction" class="com.htcf.action.MessagePushAction" />
	<!-- 市规土局反馈 -->
	<bean name="run_bean1" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="sbdcptAct" />
		<property name="targetMethod">
			<value>fetchVwSeaRightinfo</value>
		</property>
	</bean>
	<bean id="sx_trigger1" class="org.springframework.scheduling.quartz.CronTriggerBean">
	      <property name="jobDetail">
	          <ref bean="run_bean1" />
	      </property>
	      <property name="cronExpression">
	           <value>10 20 20 * * ?</value>
	      </property>
	</bean>
    <bean id="d1" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref local="sx_trigger1" />
                <ref local="msg_trigger" />
            </list>
        </property>     
    </bean>
    <!--消息推送-->
	<bean name="msgTask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="messagePushAction" />
		<property name="targetMethod">
			<value>pushMsgTask</value>
		</property>
	</bean>
	<bean id="msg_trigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
	      <property name="jobDetail">
	          <ref bean="msgTask" />
	      </property>
	      <property name="cronExpression">
	           <value>0 0/10 * * * ?</value>
	      </property>
	</bean>
</beans>
